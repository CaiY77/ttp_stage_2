{"version":3,"sources":["service/apiservice.js","components/SingleStock.js","components/Portfolio.js","components/Transaction.js","components/Dashboard.js","components/Login.js","App.js","index.js"],"names":["api","axios","create","baseURL","findUser","cred","a","post","resp","data","console","log","makeUser","regInfo","updateUser","id","newInfo","put","makeStock","stockInfo","getStocks","get","SingleStock","props","state","change","latest","url","this","symbol","then","response","setState","latestPrice","catch","e","company","qty","total","Card","raised","key","className","Content","Header","Description","toFixed","Component","Portfolio","handleInputs","event","target","name","value","findStock","search","searchErr","result","setTimeout","checkStock","user","budget","wallet","cost","qtyErr","Stock","companyName","spend","success","results","cancelSearch","filterStocks","arr","obj","mergeArr","forEach","price","Object","values","i","push","length","j","stocks","final","fullname","Grid","Column","width","Form","onSubmit","Input","required","icon","placeholder","onChange","Message","error","content","entries","fluid","Button","onClick","Meta","extra","Group","type","min","step","color","header","stackable","itemsPerRow","map","stock","size","moment","require","Transaction","renderTransactions","dateString","createdAt","momentDate","format","isLogged","to","Dashboard","active","fetchStocks","logout","inverted","exact","path","render","Login","toggleUser","newUser","login","register","form1err","form2err","style","height","iconPosition","label","primary","App","amt","remain","update","toggleLogged","userStocks","email","password","newEmail","newPassword","toLowerCase","handleLogOut","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.deff8a20.chunk.js","sourcesContent":["import axios from 'axios'\nconst URL = 'http://localhost:3001';\nconst URL_LIVE = 'https://ttp-db.herokuapp.com';\n\nconst api = axios.create({\n  baseURL: `${URL_LIVE}`\n})\n\nexport const findUser = async (cred) => {\n  try {\n    const resp = await api.post('/login', cred)\n    return resp.data\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nexport const makeUser = async (regInfo) => {\n  try {\n    const resp = await api.post('/signup', regInfo)\n    return resp.data\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nexport const updateUser = async (id ,newInfo) => {\n  try {\n    const resp = await api.put(`/user/${id}`, newInfo)\n    return resp.data\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nexport const makeStock = async (id,stockInfo) => {\n  try {\n    const resp = await api.post(`/user/${id}/stock`, stockInfo)\n    return resp.data\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nexport const getStocks = async (id) => {\n  try {\n    const resp = await api.get(`/user/${id}/stocks`)\n    return resp.data\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nexport const getUser= async (id) =>{\n  try {\n    const resp = await api.get(`/user/${id}`)\n    return resp.data\n  } catch (e) {\n    console.log(e)\n  }\n}\n","import React, { Component } from 'react';\nimport axios from 'axios'\nimport { Card } from 'semantic-ui-react'\nclass SingleStock extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      change: '',\n      latest:''\n    };\n  }\n\n  async componentDidMount() {\n    const token = 'pk_60ef2a46b58e4d3e9ba1c7138a8eed18'\n    let url =`https://cloud.iexapis.com/stable/stock/${this.props.symbol}/quote?token=${token}`\n    await axios.get(url)\n    .then(response => response.data)\n    .then(data=>{\n      this.setState({\n        change: data.change,\n        latest: data.latestPrice\n      });\n    })\n    .catch(e=>{\n      console.log(e);\n    })\n\n  }\n\n\n  render() {\n    const {company, qty, symbol} = this.props\n    const {change,latest} = this.state\n    let total= qty * latest;\n\n    return (<Card raised key={symbol} className=\"card-style\"\n      className={\n        (change == 0)\n          ? 'grey-back'\n          : (change > 0)?'green-back' : 'red-back'\n      }\n            >\n      <Card.Content>\n        <Card.Header className=\"card-style-2\">{company}</Card.Header>\n        <Card.Description className=\"card-style\">\n          You currently own {qty} shares of {symbol}. Each share is worth ${latest}.\n        </Card.Description>\n      </Card.Content>\n      <Card.Content className=\"card-style\">\n        Total Value: ${total.toFixed(2)}\n      </Card.Content>\n\n    </Card>);\n  }\n\n}\n\nexport default SingleStock;\n","import React, { Component } from 'react';\nimport axios from 'axios'\nimport {Grid, Card, Form, Message,Header,Input,Button, Icon} from 'semantic-ui-react'\nimport { makeStock } from '../service/apiservice.js'\nimport SingleStock from './SingleStock.js'\n\nlet changer='';\n\nclass Portfolio extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search:'',\n      searchErr:false,\n      qtyErr: false,\n      result: {},\n      qty:'',\n      success:false,\n      change:''\n    };\n  }\n\n  handleInputs = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  findStock = async() =>{\n    const { search, searchErr } = this.state\n    const token = 'pk_60ef2a46b58e4d3e9ba1c7138a8eed18'\n    let url =`https://cloud.iexapis.com/stable/stock/${search}/quote?token=${token}`\n    await axios.get(url)\n    .then(response => response.data)\n    .then(data=>{\n      this.setState({\n        result: data,\n        searchErr: false\n      });\n    })\n    .catch(e=>{\n      this.setState({\n        searchErr: true\n      });\n      setTimeout(()=>{\n        this.setState({\n          searchErr:false\n        });\n      },2000)\n    })\n  }\n\n  checkStock = async () => {\n    const {result , qty} = this.state\n    const {user} = this.props\n    const budget = user.wallet;\n    const cost = qty * result.latestPrice;\n\n    if((result.latestPrice * qty) > budget){\n      this.setState({\n        qtyErr: true\n      });\n      setTimeout(()=>{\n        this.setState({\n          qtyErr: false\n        });\n      },2000);\n    } else {\n      const Stock = {\n        \"company\": result.companyName,\n        \"symbol\": result.symbol,\n        \"qty\": qty,\n        \"change\": result.change,\n        \"price\": result.latestPrice\n      }\n      const newStock = await makeStock(user.id,Stock);\n      this.props.spend(cost);\n      this.setState({\n        success: true,\n        results: {},\n        qty:''\n      });\n      setTimeout(()=>{\n        this.setState({\n          success:false\n        });\n      },2500)\n    }\n  }\n\n  cancelSearch=()=>{\n    this.setState({\n      result:{}\n    });\n  }\n\n  filterStocks = (arr) => {\n    const {change} = this.state\n    let obj = {};\n    let mergeArr = []\n    arr.forEach(e => {\n      if (obj[e.symbol] !== e.symbol) {\n        obj[e.symbol] = { qty: 0, symbol: e.symbol, company: e.company,price: e.price}\n      }\n    })\n\n    for (let i of Object.values(obj)) {\n      mergeArr.push(i)\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n      for (let j = 0; j < mergeArr.length; j++) {\n        if (arr[i].symbol === mergeArr[j].symbol) {\n          mergeArr[j].qty += arr[i].qty\n        }\n      }\n    }\n    return mergeArr;\n  }\n\n\n  render() {\n    const {searchErr, result, qtyErr,qty,success} = this.state\n    const {stocks, user} = this.props\n    let final = this.filterStocks(stocks)\n\n    return (\n      <div>\n\n        <div className=\"wel-bud\">\n          <h1 className=\"welcome-back\">Welcome back, {user.fullname} !</h1>\n          <h1 className=\"budget-style\">My Budget: $ {user.wallet.toFixed(2)}</h1>\n        </div>\n\n        <Grid className=\"grid-style\">\n          <Grid.Column width={5} className=\"left-column\">\n            <Form onSubmit={this.findStock}>\n              <Form.Input required name=\"search\" icon=\"search\" placeholder=\"Enter a Stock Symbol\" onChange={this.handleInputs}/>\n            </Form>\n            {\n              (searchErr)\n                ?(<Message\n                  error\n                  content=\"This is an invalid search value\"\n                  />)\n                : null\n            }\n            {\n              (Object.entries(result).length)\n                ? <Card fluid>\n                  <Card.Content>\n                    <Card.Header className=\"card-style-2\">{result.companyName} <Button onClick={this.cancelSearch} className=\"button-position\" icon=\"close\"/></Card.Header>\n                    <Card.Meta className=\"card-style\">{result.symbol}</Card.Meta>\n                    <Card.Description className=\"card-style\">Current Price: ${result.latestPrice}</Card.Description>\n\n                  </Card.Content>\n                  <Card.Content extra>\n                    <Form onSubmit={this.checkStock}>\n                      <Form.Group className=\"qty-style\">\n                        <Form.Input value={qty} name='qty' placeholder={`$${result.latestPrice}`} onChange={this.handleInputs} type=\"number\" min=\"0\" step=\"0\"/>\n                        <Form.Button type=\"submit\" content=\"Buy\" color=\"green\"/>\n                      </Form.Group>\n                    </Form>\n                  </Card.Content>\n                </Card>\n                : (<Message\n                  header=\"You have no search results\"\n                  content=\"Enter the symbol of the stock you want to buy\"\n                   />)\n            }\n            {\n              (qtyErr)\n                ?(<Message\n                  error\n                  content=\"Please cheack to make sure you have enough money in your budget.\"\n                  />)\n                : null\n            }\n            {\n              (success)\n                ?<Message\n                  color=\"green\"\n                  header=\"Success\"\n                  content=\"Your purchase was successful!\"\n                 />\n                :null\n            }\n          </Grid.Column>\n          <Grid.Column width={11} className=\"right-column\">\n            {\n              (stocks.length)\n                ? (<Card.Group stackable itemsPerRow=\"1\">\n                  {\n                    final.map(stock=>\n                      <SingleStock\n                        company={stock.company}\n                        qty={stock.qty}\n                        symbol={stock.symbol}\n                      />)\n                  }\n                </Card.Group>)\n                : <Message\n                  className = 'no-stock'\n                  size=\"big\"\n                  color=\"yellow\"\n                  content=\"Your portfolio is currently empty. Search and purchase your first stock today!\"\n                  />\n            }\n          </Grid.Column>\n        </Grid>\n      </div>\n    );\n  }\n\n}\n\nexport default Portfolio;\n","import React, { Component } from 'react';\nimport { Card , Message } from 'semantic-ui-react'\nimport {Redirect} from 'react-router'\nconst moment = require('moment');\n\nclass Transaction extends Component {\n\n  renderTransactions = () => {\n    const { stocks } = this.props\n\n    const myTrans = stocks.map(stock=>{\n      const total = stock.qty * stock.price;\n      const dateString = stock.createdAt;\n      const momentDate = moment(dateString)\n\n      return <Card raised key={stock.id} className=\"card-style\" >\n        <Card.Content>\n          <Card.Header className=\"card-style-2\">{stock.company}</Card.Header>\n          <Card.Meta className=\"card-style\">{momentDate.format(\"LLLL\")}</Card.Meta>\n          <Card.Description className=\"card-style\">\n            You purchsed {stock.qty} shares of {stock.symbol} at ${stock.price} a share.\n          </Card.Description>\n        </Card.Content>\n        <Card.Content className=\"card-style\">\n          Total: $ {total.toFixed(2)}\n        </Card.Content>\n\n      </Card>\n    });\n\n    return myTrans;\n  }\n\n  render() {\n    if (this.props.isLogged === false) {\n      return <Redirect to='/' />\n    }\n    return (<div className=\"trans-contain\">\n      {\n        (this.props.stocks.length)\n          ?<Card.Group stackable itemsPerRow=\"1\">\n            {this.renderTransactions()}\n          </Card.Group>\n          :<Message\n            className = 'no-stock'\n            size=\"big\"\n            color=\"yellow\"\n            content=\"You have no previous transactions\"\n           />\n      }\n    </div>);\n  }\n\n}\n\nexport default Transaction;\n","import React, { Component } from 'react';\nimport {Route,Link} from 'react-router-dom';\nimport { Button } from 'semantic-ui-react'\nimport Portfolio from './Portfolio.js'\nimport Transaction from './Transaction.js'\n\nclass Dashboard extends Component {\nconstructor(props) {\n  super(props);\n  this.state = {\n    active: \"portfolio\"\n  };\n}\n  render() {\n    const { stocks, fetchStocks, isLogged, user,spend } = this.props\n    return (<div>\n      <nav className=\"ui secondary menu\">\n\n        <Link className=\"custom-style\" to = \"/\"> <div>Portfolio</div></Link>\n        <Link className=\"custom-style\" to = \"/transactions\"> <div>Transactions</div></Link>\n        <div className=\"right menu\">\n          <Link to = \"/\" onClick={this.props.logout}><Button inverted color=\"red\" className=\"logout-style\">Sign Out</Button></Link>\n        </div>\n\n      </nav>\n\n      <Route exact path = '/' render={()=> <Portfolio user={user} stocks={stocks} fetchStocks={fetchStocks} spend={spend}/>}/>\n      <Route path = '/transactions' render={()=> <Transaction stocks={stocks} isLogged={isLogged}/>}/>\n\n    </div>);\n  }\n\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport { Form, Button, Message } from 'semantic-ui-react'\n\nclass Login extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      newUser: true\n    };\n  }\n\n  toggleUser = () => {\n    const { newUser } = this.state;\n    this.setState({\n      newUser: !newUser\n    });\n  }\n\n  render() {\n    const { handleInputs, login, register, form1err, form2err } = this.props;\n    const { newUser } = this.state;\n    return (\n      <div style={{height: '100%'}}>\n\n        <h1 className='login-title'>TTP Stocks</h1>\n\n        <div className='login-bottom'>\n          {\n            (newUser)\n              ?(<div className='form-reg-div'>\n                <Form error className='form-reg' onSubmit={()=>register()}>\n\n                  <Form.Input\n                    className=\"login-font\"\n                    icon='user'\n                    iconPosition='left'\n                    label='Full Name'\n                    placeholder='Full Name'\n                    onChange={handleInputs}\n                    name=\"fullname\"\n                    required\n                  />\n                  <Form.Input\n                    className=\"login-font\"\n                    icon='mail'\n                    iconPosition='left'\n                    label='Email'\n                    type='email'\n                    placeholder='Email Address'\n                    onChange={handleInputs}\n                    name=\"newEmail\"\n                    required\n                  />\n\n                  <Form.Input\n                    className=\"login-font\"\n                    icon='lock'\n                    iconPosition='left'\n                    label='Password'\n                    type='password'\n                    placeholder=\"Password\"\n                    onChange={handleInputs}\n                    name=\"newPassword\"\n                    required\n                  />\n\n                  {\n                    (form2err)\n                      ?(<Message\n                        error\n                        header='Unable to register'\n                        content='This email address is already in use. Please try with a new email.'\n                        />)\n                      : null\n                  }\n\n                  <Button inverted className=\"login-font\" color='blue' content='Register!' primary />\n                </Form>\n                <div className = \"button-center\">\n                  <Button color='green' className=\"button-style login-font\" onClick={this.toggleUser} content=\"Existing User? Sign In!\"/>\n                </div>\n              </div>)\n              :(<div className='form-login-div'>\n                <Form error className='form-login' onSubmit={()=>login()}>\n                  <Form.Input\n                    className=\"login-font\"\n                    icon='mail'\n                    iconPosition='left'\n                    label='Email'\n                    placeholder='Email Address'\n                    type='email'\n                    onChange={handleInputs}\n                    name = \"email\"\n                    required\n                  />\n\n                  <Form.Input\n                    className=\"login-font\"\n                    icon='lock'\n                    iconPosition='left'\n                    label='Password'\n                    type='password'\n                    placeholder=\"Password\"\n                    onChange={handleInputs}\n                    name=\"password\"\n                    required\n                  />\n                  {\n                    (form1err)\n                      ?(<Message\n                        error\n                        header='Invalid email or password'\n                        content=\"We are unable to find your account. Please try again.\"\n                        />)\n                      : null\n                  }\n\n                  <Button inverted className=\"login-font\" color='green' content='Login'/>\n                </Form>\n                <div className = \"button-center\">\n                  <Button inverted className=\"button-style login-font\" color='blue' onClick={this.toggleUser} content=\"New User? Sign Up!\"/>\n                </div>\n              </div>)\n          }\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { findUser , makeUser, updateUser, getUser, getStocks} from './service/apiservice.js'\nimport Dashboard from './components/Dashboard.js'\nimport Login from './components/Login.js'\nimport './App.css'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      newEmail:'',\n      newPassword: '',\n      fullname: '',\n      isLogged: false,\n      stocks:[],\n      user:{},\n      form1err:false,\n      form2err:false\n    };\n  }\n\n  spend = async (amt) => {\n    const { user } = this.state\n    const remain = user.wallet - amt;\n    const update ={\n      \"wallet\":remain\n    }\n    const resp = await updateUser(user.id,update)\n    this.setState({\n      user:resp\n    });\n    this.fetchStocks()\n  }\n\n  toggleLogged = () => {\n    this.setState({\n      isLogged: true\n    });\n  }\n\n  fetchStocks = async () => {\n    const { user } = this.state;\n    const userStocks = await getStocks(user.id);\n    this.setState({\n      stocks: userStocks\n    });\n  }\n\n  login = async () => {\n    const {email,password} = this.state;\n    const cred = {\n      email: email,\n      password: password\n    }\n\n    const user = await findUser(cred);\n      if (user) {\n        this.setState({\n          user: user\n        });\n        await this.fetchStocks();\n        this.toggleLogged();\n      } else {\n        this.setState({\n          form1err: true\n        });\n      }\n  }\n\n  register = async () => {\n    const { fullname,newEmail,newPassword } = this.state\n\n    const regInfo = {\n      fullname: fullname,\n      email: newEmail.toLowerCase(),\n      password: newPassword\n    }\n    const user = await makeUser(regInfo);\n\n    if (user) {\n      this.setState({\n        user: user\n      });\n      this.toggleLogged();\n    } else {\n      this.setState({\n        form2err: true\n      });\n    }\n\n  }\n\n  handleInputs = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleLogOut=()=>{\n    this.setState({\n      email: '',\n      password: '',\n      newEmail:'',\n      newPassword: '',\n      fullname: '',\n      isLogged: false,\n      user:{},\n      stocks:[],\n      form1err:false,\n      form2err:false\n    });\n  }\n\n  render() {\n    const {isLogged, form1err ,form2err, stocks, user} = this.state\n    return (<div className='main-div'>\n      {\n        (isLogged)\n          ? <Dashboard\n            logout={this.handleLogOut}\n            stocks={stocks}\n            fetchStocks={this.fetchStocks}\n            isLogged = {isLogged}\n            user = {user}\n            spend={this.spend}\n            />\n          : <Login\n            form1err={form1err}\n            form2err= {form2err}\n            handleInputs={this.handleInputs}\n            login={this.login}\n            register={this.register}/>\n      }\n    </div>);\n\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>\n  , document.getElementById('root'));\n"],"sourceRoot":""}